#include <iostream>
using namespace std;

void mergesort(int arr[], int l, int r);
void merge(int arr[], int l, int m, int r);

int main()
{
    int n;
    cout << "Enter the size of the array: ";
    cin >> n;

    int arr[n];
    cout << "Enter the elements of array: ";

    for (int i = 0; i < n; i++)
    {
        cin >> arr[i];
    }

    mergesort(arr, 0, n - 1);

    cout << "the sorted array is : ";
    for (int i = 0; i < n; i++)
    {
        cout << arr[i] << " ";
    }
}

void mergesort(int arr[], int l, int r)
{
    if (l < r)
    {

        int m = (l + r) / 2;

        mergesort(arr, l, m);
        mergesort(arr, m + 1, r);

        merge(arr, l, m, r);
    }
}

void merge(int arr[], int l, int m, int r)
{
    int leftsize = m - l + 1;
    int rightsize = r - m;

    int leftarr[leftsize];
    int rightarr[rightsize];

    for (int i = 0; i < leftsize; i++)
    {
        leftarr[i] = arr[l + i];
    }

    for (int j = 0; j < rightsize; j++)
    {
        rightarr[j] = arr[m + 1 + j];
    }

    int i = 0, j = 0, k = l;

    while (i < leftsize && j < rightsize)
    {
        if (leftarr[i] < rightarr[j])
        {

            arr[k] = leftarr[i];
            i++;
        }
        else
        {
            arr[k] = rightarr[j];
            j++;
        }
        k++;
    }

    while (i < leftsize)
    {
        arr[k] = leftarr[i];
        i++;
        k++;
    }

    while (j < rightsize)
    {
        arr[k] = rightarr[j];
        j++;
        k++;
    }
}
